{
  "config": {
    "configFile": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\playwright.config.ts",
    "rootDir": "H:/DCS-SEM 9/Minor Project/CitiZen/citiZen-api/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\setup\\globalSetup.ts",
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 6
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        null
      ],
      [
        "json",
        {
          "outputFile": "test-results/results.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "test-results/results.xml"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "H:/DCS-SEM 9/Minor Project/CitiZen/citiZen-api/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "api-tests",
        "name": "api-tests",
        "testDir": "H:/DCS-SEM 9/Minor Project/CitiZen/citiZen-api/tests",
        "testIgnore": [],
        "testMatch": [
          "**/tests/**/*.spec.ts"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.0",
    "workers": 6,
    "webServer": {
      "command": "npm run dev",
      "url": "http://localhost:3333/health",
      "reuseExistingServer": true,
      "timeout": 120000,
      "stdout": "pipe",
      "stderr": "pipe",
      "env": {
        "NODE_ENV": "test"
      }
    }
  },
  "suites": [
    {
      "title": "integration\\admin-workflow.spec.ts",
      "file": "integration/admin-workflow.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Admin Workflow Integration Tests",
          "file": "integration/admin-workflow.spec.ts",
          "line": 12,
          "column": 6,
          "specs": [
            {
              "title": "TC-INT-005: Complete constituency and panchayat management workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 3209,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts:116:49",
                        "location": {
                          "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts",
                          "column": 49,
                          "line": 116
                        },
                        "snippet": "\u001b[0m \u001b[90m 114 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 115 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 116 |\u001b[39m     expect(updateConstituencyResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 117 |\u001b[39m     \u001b[36mconst\u001b[39m updateConstituencyData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m updateConstituencyResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 118 |\u001b[39m     expect(updateConstituencyData\u001b[33m.\u001b[39mconstituency\u001b[33m.\u001b[39mname)\u001b[33m.\u001b[39mtoBe(\n \u001b[90m 119 |\u001b[39m       \u001b[32m\"Updated Test Constituency\"\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts",
                            "column": 49,
                            "line": 116
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n\u001b[0m \u001b[90m 114 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 115 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 116 |\u001b[39m     expect(updateConstituencyResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 117 |\u001b[39m     \u001b[36mconst\u001b[39m updateConstituencyData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m updateConstituencyResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 118 |\u001b[39m     expect(updateConstituencyData\u001b[33m.\u001b[39mconstituency\u001b[33m.\u001b[39mname)\u001b[33m.\u001b[39mtoBe(\n \u001b[90m 119 |\u001b[39m       \u001b[32m\"Updated Test Constituency\"\u001b[39m\u001b[0m\n\u001b[2m    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts:116:49\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-16T04:00:48.771Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts",
                        "column": 49,
                        "line": 116
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "a0047c665aa34bbb23d7-abd5b58220342d9570a3",
              "file": "integration/admin-workflow.spec.ts",
              "line": 13,
              "column": 7
            },
            {
              "title": "TC-INT-006: Bulk operations workflow",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 3207,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-16T04:00:48.800Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "a0047c665aa34bbb23d7-0e036d934efe52caf29d",
              "file": "integration/admin-workflow.spec.ts",
              "line": 158,
              "column": 7
            },
            {
              "title": "TC-INT-007: Issue management and assignment workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 4193,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts:309:37",
                        "location": {
                          "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts",
                          "column": 37,
                          "line": 309
                        },
                        "snippet": "\u001b[0m \u001b[90m 307 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 308 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 309 |\u001b[39m     expect(assignResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 310 |\u001b[39m     \u001b[36mconst\u001b[39m assignData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m assignResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 311 |\u001b[39m     expect(assignData\u001b[33m.\u001b[39missue\u001b[33m.\u001b[39mhandled_by)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"Department Head 1\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 312 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts",
                            "column": 37,
                            "line": 309
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n\u001b[0m \u001b[90m 307 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 308 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 309 |\u001b[39m     expect(assignResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 310 |\u001b[39m     \u001b[36mconst\u001b[39m assignData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m assignResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 311 |\u001b[39m     expect(assignData\u001b[33m.\u001b[39missue\u001b[33m.\u001b[39mhandled_by)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"Department Head 1\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 312 |\u001b[39m\u001b[0m\n\u001b[2m    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts:309:37\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-16T04:00:48.731Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts",
                        "column": 37,
                        "line": 309
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "a0047c665aa34bbb23d7-d7f78bc7a057c8238bbf",
              "file": "integration/admin-workflow.spec.ts",
              "line": 257,
              "column": 7
            },
            {
              "title": "TC-INT-008: Data integrity and cleanup workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 3243,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts:491:49",
                        "location": {
                          "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts",
                          "column": 49,
                          "line": 491
                        },
                        "snippet": "\u001b[0m \u001b[90m 489 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 490 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 491 |\u001b[39m     expect(updateConstituencyResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 492 |\u001b[39m     \u001b[36mconst\u001b[39m updateConstituencyData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m updateConstituencyResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 493 |\u001b[39m     expect(updateConstituencyData\u001b[33m.\u001b[39mconstituency\u001b[33m.\u001b[39mname)\u001b[33m.\u001b[39mtoBe(\n \u001b[90m 494 |\u001b[39m       \u001b[32m\"Updated Cleanup Test Constituency\"\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts",
                            "column": 49,
                            "line": 491
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n\u001b[0m \u001b[90m 489 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 490 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 491 |\u001b[39m     expect(updateConstituencyResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 492 |\u001b[39m     \u001b[36mconst\u001b[39m updateConstituencyData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m updateConstituencyResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 493 |\u001b[39m     expect(updateConstituencyData\u001b[33m.\u001b[39mconstituency\u001b[33m.\u001b[39mname)\u001b[33m.\u001b[39mtoBe(\n \u001b[90m 494 |\u001b[39m       \u001b[32m\"Updated Cleanup Test Constituency\"\u001b[39m\u001b[0m\n\u001b[2m    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts:491:49\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-16T04:00:48.765Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\admin-workflow.spec.ts",
                        "column": 49,
                        "line": 491
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "a0047c665aa34bbb23d7-6655b8c48de0387905dc",
              "file": "integration/admin-workflow.spec.ts",
              "line": 389,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "integration\\user-workflow.spec.ts",
      "file": "integration/user-workflow.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "User Workflow Integration Tests",
          "file": "integration/user-workflow.spec.ts",
          "line": 29,
          "column": 6,
          "specs": [
            {
              "title": "TC-INT-001: Complete user registration and issue creation workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 3006,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts:52:37",
                        "location": {
                          "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts",
                          "column": 37,
                          "line": 52
                        },
                        "snippet": "\u001b[0m \u001b[90m 50 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m     expect(signupResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m     \u001b[36mconst\u001b[39m signupData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m signupResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 54 |\u001b[39m     expect(signupData)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"token\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 55 |\u001b[39m     expect(signupData)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"user\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts",
                            "column": 37,
                            "line": 52
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n\u001b[0m \u001b[90m 50 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 51 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m     expect(signupResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 53 |\u001b[39m     \u001b[36mconst\u001b[39m signupData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m signupResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 54 |\u001b[39m     expect(signupData)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"token\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 55 |\u001b[39m     expect(signupData)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"user\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts:52:37\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-16T04:00:48.766Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts",
                        "column": 37,
                        "line": 52
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "a053a90b33a542745ab4-f8fed46e01967dde5aa1",
              "file": "integration/user-workflow.spec.ts",
              "line": 30,
              "column": 7
            },
            {
              "title": "TC-INT-002: Issue lifecycle with upvoting workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 3014,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading '_id')",
                        "stack": "TypeError: Cannot read properties of undefined (reading '_id')\n    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts:190:37",
                        "location": {
                          "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts",
                          "column": 37,
                          "line": 190
                        },
                        "snippet": "\u001b[0m \u001b[90m 188 |\u001b[39m\n \u001b[90m 189 |\u001b[39m     \u001b[36mconst\u001b[39m issueData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m issueResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 190 |\u001b[39m     \u001b[36mconst\u001b[39m issueId \u001b[33m=\u001b[39m issueData\u001b[33m.\u001b[39missue\u001b[33m.\u001b[39m_id\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 191 |\u001b[39m\n \u001b[90m 192 |\u001b[39m     \u001b[90m// Step 2: Add upvote to the issue\u001b[39m\n \u001b[90m 193 |\u001b[39m     \u001b[36mconst\u001b[39m upvoteResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts",
                            "column": 37,
                            "line": 190
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading '_id')\n\n\u001b[0m \u001b[90m 188 |\u001b[39m\n \u001b[90m 189 |\u001b[39m     \u001b[36mconst\u001b[39m issueData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m issueResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 190 |\u001b[39m     \u001b[36mconst\u001b[39m issueId \u001b[33m=\u001b[39m issueData\u001b[33m.\u001b[39missue\u001b[33m.\u001b[39m_id\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 191 |\u001b[39m\n \u001b[90m 192 |\u001b[39m     \u001b[90m// Step 2: Add upvote to the issue\u001b[39m\n \u001b[90m 193 |\u001b[39m     \u001b[36mconst\u001b[39m upvoteResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[0m\n\u001b[2m    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts:190:37\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-16T04:00:48.722Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts",
                        "column": 37,
                        "line": 190
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "a053a90b33a542745ab4-147a5e3dacbdce3c188f",
              "file": "integration/user-workflow.spec.ts",
              "line": 152,
              "column": 7
            },
            {
              "title": "TC-INT-003: Multi-user issue interaction workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 7,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 365,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'id')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts:317:36",
                        "location": {
                          "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts",
                          "column": 36,
                          "line": 317
                        },
                        "snippet": "\u001b[0m \u001b[90m 315 |\u001b[39m     \u001b[36mconst\u001b[39m user1Data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m user1Signup\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 316 |\u001b[39m     \u001b[36mconst\u001b[39m user1Token \u001b[33m=\u001b[39m user1Data\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 317 |\u001b[39m     \u001b[36mconst\u001b[39m user1Id \u001b[33m=\u001b[39m user1Data\u001b[33m.\u001b[39muser\u001b[33m.\u001b[39mid\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 318 |\u001b[39m\n \u001b[90m 319 |\u001b[39m     \u001b[90m// Step 2: Create second user\u001b[39m\n \u001b[90m 320 |\u001b[39m     \u001b[36mconst\u001b[39m user2Signup \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts",
                            "column": 36,
                            "line": 317
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'id')\n\n\u001b[0m \u001b[90m 315 |\u001b[39m     \u001b[36mconst\u001b[39m user1Data \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m user1Signup\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 316 |\u001b[39m     \u001b[36mconst\u001b[39m user1Token \u001b[33m=\u001b[39m user1Data\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 317 |\u001b[39m     \u001b[36mconst\u001b[39m user1Id \u001b[33m=\u001b[39m user1Data\u001b[33m.\u001b[39muser\u001b[33m.\u001b[39mid\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 318 |\u001b[39m\n \u001b[90m 319 |\u001b[39m     \u001b[90m// Step 2: Create second user\u001b[39m\n \u001b[90m 320 |\u001b[39m     \u001b[36mconst\u001b[39m user2Signup \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpost(\u001b[0m\n\u001b[2m    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts:317:36\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-16T04:00:54.376Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts",
                        "column": 36,
                        "line": 317
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "a053a90b33a542745ab4-0605e76156a4347dac46",
              "file": "integration/user-workflow.spec.ts",
              "line": 293,
              "column": 7
            },
            {
              "title": "TC-INT-004: Issue filtering and pagination workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1383,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading '_id')",
                        "stack": "TypeError: Cannot read properties of undefined (reading '_id')\n    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts:506:39",
                        "location": {
                          "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts",
                          "column": 39,
                          "line": 506
                        },
                        "snippet": "\u001b[0m \u001b[90m 504 |\u001b[39m\n \u001b[90m 505 |\u001b[39m       \u001b[36mconst\u001b[39m issueData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m issueResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 506 |\u001b[39m       \u001b[36mconst\u001b[39m issueId \u001b[33m=\u001b[39m issueData\u001b[33m.\u001b[39missue\u001b[33m.\u001b[39m_id\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 507 |\u001b[39m\n \u001b[90m 508 |\u001b[39m       \u001b[90m// Update status if not pending\u001b[39m\n \u001b[90m 509 |\u001b[39m       \u001b[36mif\u001b[39m (issue\u001b[33m.\u001b[39mstatus \u001b[33m!==\u001b[39m \u001b[32m\"pending\"\u001b[39m) {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts",
                            "column": 39,
                            "line": 506
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading '_id')\n\n\u001b[0m \u001b[90m 504 |\u001b[39m\n \u001b[90m 505 |\u001b[39m       \u001b[36mconst\u001b[39m issueData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m issueResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 506 |\u001b[39m       \u001b[36mconst\u001b[39m issueId \u001b[33m=\u001b[39m issueData\u001b[33m.\u001b[39missue\u001b[33m.\u001b[39m_id\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 507 |\u001b[39m\n \u001b[90m 508 |\u001b[39m       \u001b[90m// Update status if not pending\u001b[39m\n \u001b[90m 509 |\u001b[39m       \u001b[36mif\u001b[39m (issue\u001b[33m.\u001b[39mstatus \u001b[33m!==\u001b[39m \u001b[32m\"pending\"\u001b[39m) {\u001b[0m\n\u001b[2m    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts:506:39\u001b[22m"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-16T04:00:54.362Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\integration\\user-workflow.spec.ts",
                        "column": 39,
                        "line": 506
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "a053a90b33a542745ab4-fdf17141b9f946fa2719",
              "file": "integration/user-workflow.spec.ts",
              "line": 456,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "system\\end-to-end.spec.ts",
      "file": "system/end-to-end.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "End-to-End System Tests",
          "file": "system/end-to-end.spec.ts",
          "line": 29,
          "column": 6,
          "specs": [
            {
              "title": "TC-SYS-001: Complete citizen journey from registration to issue resolution",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 8,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1978,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts:54:37",
                        "location": {
                          "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts",
                          "column": 37,
                          "line": 54
                        },
                        "snippet": "\u001b[0m \u001b[90m 52 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 53 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 54 |\u001b[39m     expect(signupResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 55 |\u001b[39m     \u001b[36mconst\u001b[39m signupData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m signupResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 56 |\u001b[39m     expect(signupData)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"token\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 57 |\u001b[39m     expect(signupData)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"user\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts",
                            "column": 37,
                            "line": 54
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n\u001b[0m \u001b[90m 52 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 53 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 54 |\u001b[39m     expect(signupResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 55 |\u001b[39m     \u001b[36mconst\u001b[39m signupData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m signupResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 56 |\u001b[39m     expect(signupData)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"token\"\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 57 |\u001b[39m     expect(signupData)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m\"user\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts:54:37\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "Phase 1: User Registration and Authentication\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-16T04:00:54.650Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts",
                        "column": 37,
                        "line": 54
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "60dbdbd0140a040bcf61-a106df2df65d4fbc15f8",
              "file": "system/end-to-end.spec.ts",
              "line": 30,
              "column": 7
            },
            {
              "title": "TC-SYS-002: Multi-user collaborative issue management",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 5162,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m403\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts:310:37",
                        "location": {
                          "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts",
                          "column": 37,
                          "line": 310
                        },
                        "snippet": "\u001b[0m \u001b[90m 308 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 309 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 310 |\u001b[39m     expect(statusResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 311 |\u001b[39m\n \u001b[90m 312 |\u001b[39m     \u001b[90m// User 3 updates status to resolved\u001b[39m\n \u001b[90m 313 |\u001b[39m     \u001b[36mconst\u001b[39m resolveResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpatch(\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts",
                            "column": 37,
                            "line": 310
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n\n\u001b[0m \u001b[90m 308 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 309 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 310 |\u001b[39m     expect(statusResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 311 |\u001b[39m\n \u001b[90m 312 |\u001b[39m     \u001b[90m// User 3 updates status to resolved\u001b[39m\n \u001b[90m 313 |\u001b[39m     \u001b[36mconst\u001b[39m resolveResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request\u001b[33m.\u001b[39mpatch(\u001b[0m\n\u001b[2m    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts:310:37\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "Phase 1: Create multiple users\n"
                        },
                        {
                          "text": "Phase 2: User 1 creates an issue\n"
                        },
                        {
                          "text": "Phase 3: All users upvote the issue\n"
                        },
                        {
                          "text": "Phase 4: Issue status updates by different users\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-16T04:00:52.112Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts",
                        "column": 37,
                        "line": 310
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "60dbdbd0140a040bcf61-76f212a93bf6770de352",
              "file": "system/end-to-end.spec.ts",
              "line": 212,
              "column": 7
            },
            {
              "title": "TC-SYS-003: System performance and data consistency",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 1636,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m401\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts:425:33",
                        "location": {
                          "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts",
                          "column": 33,
                          "line": 425
                        },
                        "snippet": "\u001b[0m \u001b[90m 423 |\u001b[39m\n \u001b[90m 424 |\u001b[39m     \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m response \u001b[36mof\u001b[39m issueResponses) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 425 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 426 |\u001b[39m       \u001b[36mconst\u001b[39m issueData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 427 |\u001b[39m       issueIds\u001b[33m.\u001b[39mpush(issueData\u001b[33m.\u001b[39missue\u001b[33m.\u001b[39m_id)\u001b[33m;\u001b[39m\n \u001b[90m 428 |\u001b[39m     }\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts",
                            "column": 33,
                            "line": 425
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m401\u001b[39m\n\n\u001b[0m \u001b[90m 423 |\u001b[39m\n \u001b[90m 424 |\u001b[39m     \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m response \u001b[36mof\u001b[39m issueResponses) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 425 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 426 |\u001b[39m       \u001b[36mconst\u001b[39m issueData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m response\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 427 |\u001b[39m       issueIds\u001b[33m.\u001b[39mpush(issueData\u001b[33m.\u001b[39missue\u001b[33m.\u001b[39m_id)\u001b[33m;\u001b[39m\n \u001b[90m 428 |\u001b[39m     }\u001b[0m\n\u001b[2m    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts:425:33\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "Phase 1: Create multiple issues concurrently\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-16T04:00:54.675Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts",
                        "column": 33,
                        "line": 425
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "60dbdbd0140a040bcf61-92bcf7fd233607090ab5",
              "file": "system/end-to-end.spec.ts",
              "line": 380,
              "column": 7
            },
            {
              "title": "TC-SYS-004: Error handling and recovery scenarios",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "api-tests",
                  "projectName": "api-tests",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 1927,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts:618:42",
                        "location": {
                          "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts",
                          "column": 42,
                          "line": 618
                        },
                        "snippet": "\u001b[0m \u001b[90m 616 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 617 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 618 |\u001b[39m     expect(validSignupResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 619 |\u001b[39m     \u001b[36mconst\u001b[39m validSignupData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m validSignupResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 620 |\u001b[39m     \u001b[36mconst\u001b[39m token \u001b[33m=\u001b[39m validSignupData\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 621 |\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts",
                            "column": 42,
                            "line": 618
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n\n\u001b[0m \u001b[90m 616 |\u001b[39m     )\u001b[33m;\u001b[39m\n \u001b[90m 617 |\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 618 |\u001b[39m     expect(validSignupResponse\u001b[33m.\u001b[39mstatus())\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 619 |\u001b[39m     \u001b[36mconst\u001b[39m validSignupData \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m validSignupResponse\u001b[33m.\u001b[39mjson()\u001b[33m;\u001b[39m\n \u001b[90m 620 |\u001b[39m     \u001b[36mconst\u001b[39m token \u001b[33m=\u001b[39m validSignupData\u001b[33m.\u001b[39mtoken\u001b[33m;\u001b[39m\n \u001b[90m 621 |\u001b[39m\u001b[0m\n\u001b[2m    at H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts:618:42\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "Phase 1: Test invalid authentication scenarios\n"
                        },
                        {
                          "text": "Phase 2: Test invalid data scenarios\n"
                        },
                        {
                          "text": "Phase 3: Test resource not found scenarios\n"
                        },
                        {
                          "text": "Phase 4: Test system recovery\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-09-16T04:00:55.242Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "H:\\DCS-SEM 9\\Minor Project\\CitiZen\\citiZen-api\\tests\\system\\end-to-end.spec.ts",
                        "column": 42,
                        "line": 618
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "60dbdbd0140a040bcf61-3b13a2232a3c97d276aa",
              "file": "system/end-to-end.spec.ts",
              "line": 523,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "unit\\auth.spec.ts",
      "file": "unit/auth.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Authentication API - Unit Tests",
          "file": "unit/auth.spec.ts",
          "line": 11,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "POST /api/auth/signup/email - Email Signup",
              "file": "unit/auth.spec.ts",
              "line": 12,
              "column": 8,
              "specs": [
                {
                  "title": "TC-AUTH-001: Valid signup with all required fields (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 823,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:00:58.059Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-2f00438ffa5c0a41b879",
                  "file": "unit/auth.spec.ts",
                  "line": 13,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-002: Invalid email format (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 47,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:00:59.398Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-78b635efd0715fe7e079",
                  "file": "unit/auth.spec.ts",
                  "line": 39,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-003: Password too short (BVA - Just below boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 25,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:00:59.502Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-3f77aaeaf748782a1a68",
                  "file": "unit/auth.spec.ts",
                  "line": 62,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-004: Password at minimum boundary (BVA - At boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 1722,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:00:59.580Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-9b01fbf56e303aeb7693",
                  "file": "unit/auth.spec.ts",
                  "line": 83,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-005: Name too short (BVA - Just below boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 84,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:00:59.402Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-af2672b142938dcd9e9c",
                  "file": "unit/auth.spec.ts",
                  "line": 105,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-006: Name at minimum boundary (BVA - At boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 1921,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:00.080Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-43d05bd783a2a410f42d",
                  "file": "unit/auth.spec.ts",
                  "line": 126,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-007: Missing required fields (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 79,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:02.044Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-5ebbfe51811d97fdcc13",
                  "file": "unit/auth.spec.ts",
                  "line": 147,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-008: Duplicate email signup (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 3353,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:02.174Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-ee70d707cd44db82ca1e",
                  "file": "unit/auth.spec.ts",
                  "line": 164,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/auth/login/email - Email Login",
              "file": "unit/auth.spec.ts",
              "line": 200,
              "column": 8,
              "specs": [
                {
                  "title": "TC-AUTH-009: Valid login credentials (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 13,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 4446,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:00.198Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-ce201be51c65ce34738f",
                  "file": "unit/auth.spec.ts",
                  "line": 201,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-010: Invalid email format (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 13,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 178,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:05.152Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-cd13e55d8ce438726804",
                  "file": "unit/auth.spec.ts",
                  "line": 234,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-011: Wrong password (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 13,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 3970,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:05.368Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-55a4042d9e131e00e44f",
                  "file": "unit/auth.spec.ts",
                  "line": 250,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-012: Non-existent user (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 13,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 297,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:09.380Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-a93af17791ae430d85fb",
                  "file": "unit/auth.spec.ts",
                  "line": 280,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-013: Missing credentials (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 260,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:00.673Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-5e15b140128d5e187f28",
                  "file": "unit/auth.spec.ts",
                  "line": 296,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/auth/me - Get Current User Profile",
              "file": "unit/auth.spec.ts",
              "line": 313,
              "column": 8,
              "specs": [
                {
                  "title": "TC-AUTH-014: Valid authenticated request (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 6094,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:01.368Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-2c62beec21191570d2fc",
                  "file": "unit/auth.spec.ts",
                  "line": 314,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-015: Missing authorization header (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 119,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:07.540Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-cb656d06ad63b1f96dd8",
                  "file": "unit/auth.spec.ts",
                  "line": 356,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-016: Invalid token format (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 119,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:07.689Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-aeb7b7d285d49edf58de",
                  "file": "unit/auth.spec.ts",
                  "line": 364,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-017: Malformed authorization header (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 187,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:01.265Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-994a69bb8690a6505726",
                  "file": "unit/auth.spec.ts",
                  "line": 376,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/auth/change-password - Change Password",
              "file": "unit/auth.spec.ts",
              "line": 389,
              "column": 8,
              "specs": [
                {
                  "title": "TC-AUTH-018: Valid password change (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 9276,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:01.856Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-ad16b12ad5b2859916c0",
                  "file": "unit/auth.spec.ts",
                  "line": 390,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-019: Wrong current password (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 4252,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:11.192Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-9d881d496802363ea0e7",
                  "file": "unit/auth.spec.ts",
                  "line": 437,
                  "column": 9
                },
                {
                  "title": "TC-AUTH-020: New password too short (BVA - Just below boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3135,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:15.532Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "d8913dee49f1d741cd20-bc92c81f4667c27cab48",
                  "file": "unit/auth.spec.ts",
                  "line": 489,
                  "column": 9
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "unit\\constituencies.spec.ts",
      "file": "unit/constituencies.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Constituencies API - Unit Tests",
          "file": "unit/constituencies.spec.ts",
          "line": 27,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "POST /api/constituencies - Create Constituency",
              "file": "unit/constituencies.spec.ts",
              "line": 28,
              "column": 8,
              "specs": [
                {
                  "title": "TC-CONST-001: Valid constituency creation (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 611,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:01.385Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-8a0f6a63504b3e333774",
                  "file": "unit/constituencies.spec.ts",
                  "line": 29,
                  "column": 9
                },
                {
                  "title": "TC-CONST-002: Name too short (BVA - Just below boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 202,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:02.401Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-649ce5a8f5b4e8647d86",
                  "file": "unit/constituencies.spec.ts",
                  "line": 55,
                  "column": 9
                },
                {
                  "title": "TC-CONST-003: Name at minimum boundary (BVA - At boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 889,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:02.696Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-d8c49a98502967712d2a",
                  "file": "unit/constituencies.spec.ts",
                  "line": 77,
                  "column": 9
                },
                {
                  "title": "TC-CONST-004: Name too long (BVA - Just above boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 276,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:03.668Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-b53fff8abb9b54b716ac",
                  "file": "unit/constituencies.spec.ts",
                  "line": 103,
                  "column": 9
                },
                {
                  "title": "TC-CONST-005: Constituency ID too short (BVA - Just below boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 97,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:01.365Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-ad49b8539d710929f30d",
                  "file": "unit/constituencies.spec.ts",
                  "line": 125,
                  "column": 9
                },
                {
                  "title": "TC-CONST-006: Constituency ID at minimum boundary (BVA - At boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 527,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:01.612Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-ccea41b93f0a48a1fba6",
                  "file": "unit/constituencies.spec.ts",
                  "line": 147,
                  "column": 9
                },
                {
                  "title": "TC-CONST-007: Missing required fields (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 191,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:02.170Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-f75d2c0d0d9aa0cdec34",
                  "file": "unit/constituencies.spec.ts",
                  "line": 173,
                  "column": 9
                },
                {
                  "title": "TC-CONST-008: Unauthorized request (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 188,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:02.391Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-729449cda4e5b3443f50",
                  "file": "unit/constituencies.spec.ts",
                  "line": 194,
                  "column": 9
                },
                {
                  "title": "TC-CONST-009: Duplicate constituency ID (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 1420,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:02.623Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-6be5e01f3f7b9dad4aaf",
                  "file": "unit/constituencies.spec.ts",
                  "line": 211,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/constituencies - Get All Constituencies",
              "file": "unit/constituencies.spec.ts",
              "line": 248,
              "column": 8,
              "specs": [
                {
                  "title": "TC-CONST-010: Get all constituencies (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 526,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:04.248Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-b3710e008715b26576f4",
                  "file": "unit/constituencies.spec.ts",
                  "line": 249,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/constituencies/:id - Get Constituency by ID",
              "file": "unit/constituencies.spec.ts",
              "line": 261,
              "column": 8,
              "specs": [
                {
                  "title": "TC-CONST-011: Get existing constituency by valid ID (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 1067,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:04.800Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-fa08ce0e3d3b71ef0512",
                  "file": "unit/constituencies.spec.ts",
                  "line": 262,
                  "column": 9
                },
                {
                  "title": "TC-CONST-012: Get constituency with invalid ID format (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 260,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:05.910Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-19073be1b39fb6a77086",
                  "file": "unit/constituencies.spec.ts",
                  "line": 294,
                  "column": 9
                },
                {
                  "title": "TC-CONST-013: Get non-existent constituency (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 382,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:03.977Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-738ab19120e8644deb82",
                  "file": "unit/constituencies.spec.ts",
                  "line": 305,
                  "column": 9
                }
              ]
            },
            {
              "title": "PUT /api/constituencies/:id - Update Constituency",
              "file": "unit/constituencies.spec.ts",
              "line": 316,
              "column": 8,
              "specs": [
                {
                  "title": "TC-CONST-014: Update constituency with valid data (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 1063,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:04.468Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-a70559d0eac52447a5c2",
                  "file": "unit/constituencies.spec.ts",
                  "line": 317,
                  "column": 9
                },
                {
                  "title": "TC-CONST-015: Update constituency with invalid data (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 1108,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:05.568Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-045643d02b0f4645a1af",
                  "file": "unit/constituencies.spec.ts",
                  "line": 365,
                  "column": 9
                },
                {
                  "title": "TC-CONST-016: Update non-existent constituency (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 344,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:06.744Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-f89e3e37aeaeabb1ce31",
                  "file": "unit/constituencies.spec.ts",
                  "line": 410,
                  "column": 9
                }
              ]
            },
            {
              "title": "DELETE /api/constituencies/:id - Delete Constituency",
              "file": "unit/constituencies.spec.ts",
              "line": 432,
              "column": 8,
              "specs": [
                {
                  "title": "TC-CONST-017: Delete existing constituency (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 1303,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:05.680Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-70d98119e3a49975b2aa",
                  "file": "unit/constituencies.spec.ts",
                  "line": 433,
                  "column": 9
                },
                {
                  "title": "TC-CONST-018: Delete non-existent constituency (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 257,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:07.386Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-deca35f0fcd592547bb5",
                  "file": "unit/constituencies.spec.ts",
                  "line": 468,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/constituencies/bulk - Create Bulk Constituencies",
              "file": "unit/constituencies.spec.ts",
              "line": 486,
              "column": 8,
              "specs": [
                {
                  "title": "TC-CONST-019: Create bulk constituencies with valid data (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 451,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:07.691Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-b9d5894851c099af69de",
                  "file": "unit/constituencies.spec.ts",
                  "line": 487,
                  "column": 9
                },
                {
                  "title": "TC-CONST-020: Create bulk constituencies with empty array (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 153,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:08.178Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-e2b2bffb2f31539c070e",
                  "file": "unit/constituencies.spec.ts",
                  "line": 521,
                  "column": 9
                },
                {
                  "title": "TC-CONST-021: Create bulk constituencies with invalid data (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 142,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:06.221Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-30fdceb6790987c6eec7",
                  "file": "unit/constituencies.spec.ts",
                  "line": 541,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/constituencies/:constituency_id/panchayats - Add Panchayats to Constituency",
              "file": "unit/constituencies.spec.ts",
              "line": 568,
              "column": 8,
              "specs": [
                {
                  "title": "TC-CONST-022: Add panchayats to existing constituency (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 958,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:06.472Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-8ae53e5f20de48d1a82e",
                  "file": "unit/constituencies.spec.ts",
                  "line": 569,
                  "column": 9
                },
                {
                  "title": "TC-CONST-023: Add panchayats to non-existent constituency (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 298,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:07.475Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "1169d1e613ed071355b9-b70abddc3c3bb69b18cb",
                  "file": "unit/constituencies.spec.ts",
                  "line": 619,
                  "column": 9
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "unit\\issues.spec.ts",
      "file": "unit/issues.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Issues API - Unit Tests",
          "file": "unit/issues.spec.ts",
          "line": 31,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "POST /api/issues - Create Issue",
              "file": "unit/issues.spec.ts",
              "line": 32,
              "column": 8,
              "specs": [
                {
                  "title": "TC-ISSUE-001: Valid issue creation (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 7237,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:07.199Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-35d4eb413da0123a4f0a",
                  "file": "unit/issues.spec.ts",
                  "line": 33,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-002: Title too short (BVA - Just below boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 5744,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:07.845Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-f19ad953f336d1cbbc60",
                  "file": "unit/issues.spec.ts",
                  "line": 56,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-003: Title at minimum boundary (BVA - At boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 6569,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:07.867Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-e26cba7911c22157f5cd",
                  "file": "unit/issues.spec.ts",
                  "line": 76,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-004: Title too long (BVA - Just above boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 5370,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:08.376Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-feacdcd38147cbc1cdf5",
                  "file": "unit/issues.spec.ts",
                  "line": 96,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-005: Detail too short (BVA - Just below boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 13,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 4250,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:09.801Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-fc627b9e7f420343ffcb",
                  "file": "unit/issues.spec.ts",
                  "line": 116,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-006: Detail at minimum boundary (BVA - At boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 4720,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:13.625Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-1a836f1ce173035ca976",
                  "file": "unit/issues.spec.ts",
                  "line": 136,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-007: Locality too short (BVA - Just below boundary)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 3853,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:13.783Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-dc2040c38a0509204766",
                  "file": "unit/issues.spec.ts",
                  "line": 156,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-008: Anonymous issue creation (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 13,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 5053,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:14.115Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-a8d818fb9ff5eb0c7281",
                  "file": "unit/issues.spec.ts",
                  "line": 176,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-009: Missing required fields (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 172,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:14.478Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-a43b82c9e5997a330423",
                  "file": "unit/issues.spec.ts",
                  "line": 198,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-010: Unauthenticated request (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 155,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:14.494Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-f1c92a0ef7c427d97020",
                  "file": "unit/issues.spec.ts",
                  "line": 215,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/issues - Get All Issues",
              "file": "unit/issues.spec.ts",
              "line": 231,
              "column": 8,
              "specs": [
                {
                  "title": "TC-ISSUE-011: Get all issues without filters (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 821,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:14.685Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-8549c6eded80ec57c06a",
                  "file": "unit/issues.spec.ts",
                  "line": 232,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-012: Get issues with valid status filter (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 795,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:14.695Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-5bc2c8e818495058f0ba",
                  "file": "unit/issues.spec.ts",
                  "line": 243,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-013: Get issues with invalid status filter (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 165,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:15.533Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-373e720b3007a6f21157",
                  "file": "unit/issues.spec.ts",
                  "line": 255,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-014: Get issues with pagination (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 880,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:15.554Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-2ed027ee16149781a8f8",
                  "file": "unit/issues.spec.ts",
                  "line": 265,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-015: Get issues with invalid pagination (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 182,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:15.736Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-c0c866be13b99a1092e4",
                  "file": "unit/issues.spec.ts",
                  "line": 278,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-016: Get issues with date range filter (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 776,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:15.955Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-b4c177b55ecf37a9aa52",
                  "file": "unit/issues.spec.ts",
                  "line": 288,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-017: Get issues with invalid date range (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 256,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:16.478Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-da5a2c5c9b144e429fbb",
                  "file": "unit/issues.spec.ts",
                  "line": 301,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/issues/:id - Get Issue by ID",
              "file": "unit/issues.spec.ts",
              "line": 315,
              "column": 8,
              "specs": [
                {
                  "title": "TC-ISSUE-018: Get existing issue by valid ID (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 5259,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:16.759Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-bdc183d7aa1748d70b78",
                  "file": "unit/issues.spec.ts",
                  "line": 316,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-019: Get issue with invalid ID format (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 195,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:16.769Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-fceafb404f92ea650668",
                  "file": "unit/issues.spec.ts",
                  "line": 346,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-020: Get non-existent issue (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 391,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:17.004Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-e779c44191185df18eaf",
                  "file": "unit/issues.spec.ts",
                  "line": 356,
                  "column": 9
                }
              ]
            },
            {
              "title": "PUT /api/issues/:id - Update Issue",
              "file": "unit/issues.spec.ts",
              "line": 367,
              "column": 8,
              "specs": [
                {
                  "title": "TC-ISSUE-021: Update issue with valid data (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 4801,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:17.438Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-b66f4147c55ffcc7302c",
                  "file": "unit/issues.spec.ts",
                  "line": 368,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-022: Update issue with invalid data (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 4515,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:17.664Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-3da8d374567761d3f506",
                  "file": "unit/issues.spec.ts",
                  "line": 408,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-023: Update non-existent issue (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 3656,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:18.383Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-a7fa8cbb30b4a8d4bef5",
                  "file": "unit/issues.spec.ts",
                  "line": 447,
                  "column": 9
                }
              ]
            },
            {
              "title": "PATCH /api/issues/:id/status - Update Issue Status",
              "file": "unit/issues.spec.ts",
              "line": 470,
              "column": 8,
              "specs": [
                {
                  "title": "TC-ISSUE-024: Update status with valid status (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3727,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:18.716Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-f4fe80d1be1718ac2b21",
                  "file": "unit/issues.spec.ts",
                  "line": 471,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-025: Update status with invalid status (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 13,
                          "parallelIndex": 3,
                          "status": "passed",
                          "duration": 3432,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:19.197Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-8a864034d6d310c8ee27",
                  "file": "unit/issues.spec.ts",
                  "line": 509,
                  "column": 9
                }
              ]
            },
            {
              "title": "POST /api/issues/:id/feedback - Add Feedback",
              "file": "unit/issues.spec.ts",
              "line": 547,
              "column": 8,
              "specs": [
                {
                  "title": "TC-ISSUE-026: Add feedback with valid data (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 14,
                          "parallelIndex": 0,
                          "status": "passed",
                          "duration": 4286,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:22.065Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-e36af2733709dd8da3c8",
                  "file": "unit/issues.spec.ts",
                  "line": 548,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-027: Add feedback with invalid satisfaction score (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 11,
                          "parallelIndex": 5,
                          "status": "passed",
                          "duration": 4150,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:22.093Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-977bd32f3fee47e0c0f9",
                  "file": "unit/issues.spec.ts",
                  "line": 595,
                  "column": 9
                }
              ]
            },
            {
              "title": "DELETE /api/issues/:id - Delete Issue",
              "file": "unit/issues.spec.ts",
              "line": 644,
              "column": 8,
              "specs": [
                {
                  "title": "TC-ISSUE-028: Delete existing issue (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 12,
                          "parallelIndex": 4,
                          "status": "passed",
                          "duration": 4087,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:22.222Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-28a89cf4bb29112a9762",
                  "file": "unit/issues.spec.ts",
                  "line": 645,
                  "column": 9
                },
                {
                  "title": "TC-ISSUE-029: Delete non-existent issue (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 16,
                          "parallelIndex": 1,
                          "status": "passed",
                          "duration": 3587,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:22.283Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "dfb159b1dd1383d75d89-6dbe1dd1c11fc9f2a5d5",
                  "file": "unit/issues.spec.ts",
                  "line": 678,
                  "column": 9
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "unit\\upvotes.spec.ts",
      "file": "unit/upvotes.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Upvotes API - Unit Tests",
          "file": "unit/upvotes.spec.ts",
          "line": 52,
          "column": 6,
          "specs": [],
          "suites": [
            {
              "title": "POST /api/upvotes/:issue_id - Add Upvote",
              "file": "unit/upvotes.spec.ts",
              "line": 53,
              "column": 8,
              "specs": [
                {
                  "title": "TC-UPVOTE-001: Add upvote to existing issue (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3757,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:22.549Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-41657c0783e4c65b24f1",
                  "file": "unit/upvotes.spec.ts",
                  "line": 54,
                  "column": 9
                },
                {
                  "title": "TC-UPVOTE-002: Add upvote to non-existent issue (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 1307,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:26.361Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-9425d4aed4aeda3f9946",
                  "file": "unit/upvotes.spec.ts",
                  "line": 76,
                  "column": 9
                },
                {
                  "title": "TC-UPVOTE-003: Add upvote with invalid issue ID format (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 1270,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:27.700Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-4cbf4bb97f1cf9bb420c",
                  "file": "unit/upvotes.spec.ts",
                  "line": 92,
                  "column": 9
                },
                {
                  "title": "TC-UPVOTE-004: Add upvote without authentication (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 1593,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:29.008Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-939a877123faacc0e856",
                  "file": "unit/upvotes.spec.ts",
                  "line": 108,
                  "column": 9
                },
                {
                  "title": "TC-UPVOTE-005: Add duplicate upvote (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 1549,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:30.634Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-c819edbf6a8c8102fcd3",
                  "file": "unit/upvotes.spec.ts",
                  "line": 121,
                  "column": 9
                }
              ]
            },
            {
              "title": "DELETE /api/upvotes/:issue_id - Remove Upvote",
              "file": "unit/upvotes.spec.ts",
              "line": 148,
              "column": 8,
              "specs": [
                {
                  "title": "TC-UPVOTE-006: Remove existing upvote (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5689,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:32.215Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-cf5406835556e19358e8",
                  "file": "unit/upvotes.spec.ts",
                  "line": 149,
                  "column": 9
                },
                {
                  "title": "TC-UPVOTE-007: Remove non-existent upvote (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3910,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:37.932Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-9c3c8673ed9d88d8e2c2",
                  "file": "unit/upvotes.spec.ts",
                  "line": 178,
                  "column": 9
                },
                {
                  "title": "TC-UPVOTE-008: Remove upvote from non-existent issue (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 1247,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:41.869Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-f6ff970e393e66209616",
                  "file": "unit/upvotes.spec.ts",
                  "line": 196,
                  "column": 9
                },
                {
                  "title": "TC-UPVOTE-009: Remove upvote without authentication (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 6473,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:43.141Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-e30aa6348a38d20d8cfa",
                  "file": "unit/upvotes.spec.ts",
                  "line": 213,
                  "column": 9
                }
              ]
            },
            {
              "title": "GET /api/upvotes/:issue_id/check - Check User Upvote",
              "file": "unit/upvotes.spec.ts",
              "line": 235,
              "column": 8,
              "specs": [
                {
                  "title": "TC-UPVOTE-010: Check upvote status when user has upvoted (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 3237,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:49.642Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-9f99955ca9858b922b68",
                  "file": "unit/upvotes.spec.ts",
                  "line": 236,
                  "column": 9
                },
                {
                  "title": "TC-UPVOTE-011: Check upvote status when user has not upvoted (ECP - Valid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 5901,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:52.908Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-bea17b18d40e05b8063e",
                  "file": "unit/upvotes.spec.ts",
                  "line": 265,
                  "column": 9
                },
                {
                  "title": "TC-UPVOTE-012: Check upvote status for non-existent issue (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 1274,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:01:58.835Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-53dafedc08fb773b90fc",
                  "file": "unit/upvotes.spec.ts",
                  "line": 287,
                  "column": 9
                },
                {
                  "title": "TC-UPVOTE-013: Check upvote status without authentication (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 2955,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:02:00.140Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-478fecfcab71e4d4a45a",
                  "file": "unit/upvotes.spec.ts",
                  "line": 304,
                  "column": 9
                },
                {
                  "title": "TC-UPVOTE-014: Check upvote status with invalid issue ID format (ECP - Invalid Class)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 1260,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:02:03.125Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-fdba4ba1f7bd477a62ce",
                  "file": "unit/upvotes.spec.ts",
                  "line": 317,
                  "column": 9
                }
              ]
            },
            {
              "title": "Upvote Workflow Tests",
              "file": "unit/upvotes.spec.ts",
              "line": 335,
              "column": 8,
              "specs": [
                {
                  "title": "TC-UPVOTE-015: Complete upvote workflow - add, check, remove (Integration Test)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 2822,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:02:04.414Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-09c79f5cf4acd700169a",
                  "file": "unit/upvotes.spec.ts",
                  "line": 336,
                  "column": 9
                },
                {
                  "title": "TC-UPVOTE-016: Multiple users upvoting same issue (Integration Test)",
                  "ok": true,
                  "tags": [],
                  "tests": [
                    {
                      "timeout": 30000,
                      "annotations": [],
                      "expectedStatus": "passed",
                      "projectId": "api-tests",
                      "projectName": "api-tests",
                      "results": [
                        {
                          "workerIndex": 15,
                          "parallelIndex": 2,
                          "status": "passed",
                          "duration": 7789,
                          "errors": [],
                          "stdout": [],
                          "stderr": [],
                          "retry": 0,
                          "startTime": "2025-09-16T04:02:07.266Z",
                          "annotations": [],
                          "attachments": []
                        }
                      ],
                      "status": "expected"
                    }
                  ],
                  "id": "8c6317458415d98d91e4-6d6ad9481fc795d4a3f4",
                  "file": "unit/upvotes.spec.ts",
                  "line": 401,
                  "column": 9
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-09-16T03:59:19.980Z",
    "duration": 175288.108,
    "expected": 89,
    "skipped": 0,
    "unexpected": 11,
    "flaky": 0
  }
}